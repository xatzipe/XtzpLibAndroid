import com.vanniktech.maven.publish.AndroidSingleVariantLibrary
import com.vanniktech.maven.publish.SonatypeHost

plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
//    alias libs.plugins.maven.publish
    alias libs.plugins.maven.publishbase
    alias(libs.plugins.sonarqube)
}

apply from: 'jacoco.gradle'

android {
    namespace NAMESPACE
    compileSdk libs.versions.compileSdk.get().toInteger()
    defaultConfig {
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        test {
            resources {
                srcDirs 'src\\test\\assets'
            }
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

mavenPublishing {

    def sonatypeHost = project.findProperty("SONATYPE_HOST")?.toString()
    if (!sonatypeHost?.isBlank()) {
        def automaticRelease = project.findProperty("SONATYPE_AUTOMATIC_RELEASE")?.toBoolean()
        publishToMavenCentral(SonatypeHost.valueOf(sonatypeHost), automaticRelease)
    }
    def releaseSigning = project.findProperty("RELEASE_SIGNING_ENABLED")?.toBoolean()
    if (releaseSigning == true) {
        signAllPublications()
    }
    configure(new AndroidSingleVariantLibrary("release", true, false))
    pomFromGradleProperties()
    pom {
        ciManagement {
            system = "github"
            url = "${POM_SCM_URL}/actions"
        }
    }
}
